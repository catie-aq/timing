from fastapi import FastAPI, Depends, HTTPException, status
from fastapi.security import OAuth2PasswordRequestForm
from fastapi.responses import JSONResponse, RedirectResponse
import secrets

app = FastAPI()

# Example user database
app.auth = {"admin": "password123"}  # Simple username-password dictionary
app.tokens = {}  # Dictionary to store authentication tokens
app.cookie_id = "auth_demo"  # Unique cookie identifier

@app.post("/login")
@app.post("/login/")
def login(form_data: OAuth2PasswordRequestForm = Depends()):
    username, password = form_data.username.strip(), form_data.password
    if app.auth is None:
        return RedirectResponse(url="/", status_code=status.HTTP_302_FOUND)
    
    if username in app.auth and app.auth[username] == password:
        token = secrets.token_urlsafe(16)
        app.tokens[token] = username
        response = JSONResponse(content={"success": True})
        response.set_cookie(
            key=f"access-token-{app.cookie_id}",
            value=token,
            httponly=True,
            samesite="none",
            secure=True,
        )
        return response
    else:
        raise HTTPException(status_code=400, detail="Incorrect credentials.")
